http://www.hifi-remote.com/forums/viewtopic.php?t=13655
Vicky:

Yes, as far as I know, there isn't a huge demand for this feature, at
least not in the JP1 community. But there certainly are a lot of uses
for pronto hex, not only in the pronto themselves, but also many other
remotes have utilities for importing pronto hex. For me, I can usually
write an executor, for one of my remotes and simply capture the pronto
hex in IRScope. So I'm not really in the "market" for either makehex
or irpmaster, unless I need 100's of commands.


The Robman:
Does IRMaster have the ability to open files that contain learned
signals and then let the user do analysis on them? If it does, it
would be very useful to me. 

As you know, I'm often asked to decode learned signals and the only
tool that I can currently use to do this is IR.exe because it has all
the bells and whistles built into it that I've asked for over the
years (ie, the rounding stuff). When someone, like Alan Richey, posts
an IRScope ICT file for me to look at, the first thing I have to do is
convert it to an IR file (using a crude spreadsheet that I wrote) so I
can open it using IR.exe. 

If your tool were to let me open all learned files, such as ICT, IR,
RMIR and any other format that you care to support like ccf, etc and
it were to let me do all the stuff that I currently do using IR.exe,
this would be very useful to me. 

Am I on the right path here or is that not the sort of thing that IRMaster is supposed to do?
 
http://www.hifi-remote.com/forums/viewtopic.php?t=14119

Vicky:

Gee, where to start. I guess the first thing, for me at least is that
I like to see "Force Learn Timings". That's a menu option on the
Advanced menu. Even if a signal decodes, I want to see all the timing
data and signal structure. It really helped me, in my protocol
studies. And its very helpful in diagnosing problems, if the learns
work, but the upgrade doesn't. 

The second thing I like is the code summary that IR will produce. The
code summary, lets me see all the decodes in a list, great for copying
and pasting, without having to retype anything. Again, I transpose
numbers, so anything I can do with copy and paste is great as far as I
am concerned, even if it does mean dumping them into an interim
spreadsheet. 

Then you get into the whole un-decoded signal things. This is a little
over my head, because I can't do the by hand decodes because of the
transposing of numbers. IR produces a timing summary text file that is
very useful in analyzing signals. Rob uses these files to dump into
spreadsheets to determine a patern. IR also has a rounding of timings
and a bi-phase thingy that I don't know how to use. 


Many of these features are only available, if the Force Learn Timings
option is checked on the Advanced menu. Very, very helpful. Even the
IRP form is more helpful in IR than anywhere else. On a simple signal
the IRPform is printed in list, which is perfect because everything is
right there to be seen. 

IR is much, much friendlier when it comes to learns.


Rob:
I think in this case, if Volts has a lot of signals to decode, IR.exe
would probably be the best tool to use because, like Vicky said, it
lets you enter multiple codes and then you can get a nice clean list
of the decode results by using the Code Summary button. I only
suggested IRTool over all the other options because I thought it would
be the easiest to get up and running quickly. I've had a few stabs at
using IRMaster but have yet to get the hang of it.  


Vicky listed a lot of the reasons but, for me, the biggest reason is
the rounding feature. Learned signals typically have lots of small
meaningless variations in the times shown, so you might see +499 -1500
+501 -1499 +502 -1498, etc, etc which makes converting them to binary
very tedious. So, in this case, I would enter "Round To 500" and they
would appear as +500 -1500 +500 -1500, etc. Furthermore, if the signal
is bi-phase, you can select EVEN or ODD to make the decode break
double times into two single times and it puts semi-colons between the
pairs, so something like this: +500 -1000 +1000 -500 would be
displayed as +500 -500; -500 +500; +500 -500. The ODD/EVEN thing tells
the decoder where to start. The simplest way to explain it is, try
each option and if you see invalid pairs (ie, +500 +500 or -500 -500)
then you've probably picked the wrong one (the exception being RC6
where we expect a couple of these at the beginning of a signal). 

Once you've entered the best round-to time and optionally selected the
correct bi-phase setting, next you would click the Times Summary
button where you would get all of the rounded timing data at once. My
next move is to cut & paste this data to Notepad where I convert it to
binary, then I would cut & paste the results to Excel to convert the
binary to decimal. 

I've tried explaining this before in the hopes of getting IRScope
and/or RMIR modified to do something similar to no avail, so now if
someone posts an ICT file for me to decode, I run it through a
spreadsheet that converts it to an IR file and do my work in IR.exe 
